{"version":3,"file":"static/js/87.8c7219f6.chunk.js","mappings":"0NAIMA,EAAkB,SAAAC,GACtB,MAAO,CACLC,OAAQD,EAAME,KAAKD,SAIVE,EAAmB,SAAAC,GAQ9B,OAFqCC,EAAAA,EAAAA,IAAQN,EAARM,EALX,SAAAC,GACxB,OAAKA,EAAML,QACJ,SAACG,GAAD,UAAeE,KADI,SAAC,KAAD,CAAUC,GAAI,gB,uHCX5C,GAAgB,eAAiB,iCAAiC,QAAU,0BAA0B,KAAO,uBAAuB,KAAO,uBAAuB,OAAS,yBAAyB,cAAgB,gCAAgC,KAAO,uBAAuB,KAAO,uBAAuB,KAAO,uBAAuB,MAAQ,wBAAwB,MAAQ,wBAAwB,OAAS,yBAAyB,QAAU,0BAA0B,GAAK,qBAAqB,OAAS,0B,SCiBvf,EAhBe,SAAAD,GACb,OACE,gBAAKE,UAAWC,EAAAA,KAAhB,UACE,UAAC,KAAD,CAASD,UAAW,SAAAE,GAAI,OAAKA,EAAKC,SAAWF,EAAAA,OAAiB,IAAM,IAAMA,EAAAA,MAAcF,GAAI,GAAKD,EAAMM,GAAvG,WACE,gBAAKJ,UAAWC,EAAAA,OAAhB,UACE,gBAAKI,IAAI,0EAA0EC,IAAI,cAEzF,iBAAKN,UAAWC,EAAAA,SAAhB,WACE,gBAAKD,UAAWC,EAAAA,KAAhB,SAA+BH,EAAMS,QACrC,gBAAKP,UAAWC,EAAAA,cAAhB,oICLV,EAJgB,SAAAH,GACd,OAAO,gBAAKE,UAAS,UAAKC,EAAAA,QAAL,YAAwBH,EAAMU,KAAOP,EAAAA,GAAa,IAAhE,SAAuEH,EAAMW,W,oBC0BhFC,EAAmB,SAAAZ,GAQvB,OACE,SAAC,KAAD,CACEa,SATa,SAACC,EAAMC,GACtBf,EAAMgB,WAAWF,EAAKH,SACtBI,EAAEE,SAQAC,SALa,SAAAJ,KAMbK,OAAQ,gBAAGC,EAAH,EAAGA,aAAH,OACN,kBAAMP,SAAUO,EAAclB,UAAWC,EAAAA,KAAzC,WACE,SAAC,KAAD,CAAOkB,UAAU,QAAQZ,KAAK,UAAUP,UAAWC,EAAAA,MAAemB,KAAK,OAAOC,aAAa,SAC3F,mBAAQD,KAAK,SAASpB,UAAWC,EAAAA,OAAjC,2EASV,EA/CiB,SAAAH,GACf,IAIIwB,EAAWxB,EAAMN,MAAM+B,OAAOC,MAAMC,KAAI,SAAAC,GAAI,OAAI,SAAC,EAAD,CAAsBnB,KAAMmB,EAAKnB,KAAMH,GAAIsB,EAAKtB,IAAnCsB,EAAKtB,OAGlEuB,EAAc7B,EAAMN,MAAM+B,OAAOd,QAAQgB,KAAI,SAACC,EAAME,GAAP,OAC/C,SAAC,EAAD,CAAiBnB,QAASiB,EAAKjB,QAASL,GAAIsB,EAAKtB,GAAII,KAAMkB,EAAKlB,MAAlDoB,MAGhB,OACE,iBAAK5B,UAAWC,EAAAA,eAAhB,WACE,gBAAKD,UAAWC,EAAAA,QAAhB,SAAkCqB,KAClC,iBAAKtB,UAAWC,EAAAA,KAAhB,WACE,gBAAKD,UAAWC,EAAAA,KAAhB,SAA+B0B,KAC/B,SAACjB,EAAD,CAAkBI,WAhBL,SAAAe,GACjB/B,EAAMgB,WAAWe,aCyBrB,GAAeC,EAAAA,EAAAA,KACbjC,EAAAA,EAAAA,KA5BsB,SAAAL,GACtB,MAAO,CACLA,MAAOA,EACPqC,YAAarC,EAAM+B,OAAOM,eAyBH,CACvBf,WAAAA,EAAAA,IAEFnB,EAAAA,EAJF,CAKEoC","sources":["componetns/hoc/withAuthRedirect.js","webpack://01_educational-project/./src/componetns/messages/Messages.module.css?d513","componetns/messages/dialog/DialogUserItem.jsx","componetns/messages/message/Message.jsx","componetns/messages/Messages.jsx","componetns/messages/MessagesConteiner.jsx"],"sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport const withAuthRedirect = Component => {\r\n  const RedirectComponent = props => {\r\n    if (!props.isAuth) return <Navigate to={'/login'} />;\r\n    return <Component {...props} />;\r\n  };\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogsWrapper\":\"Messages_dialogsWrapper__KNpXr\",\"dialogs\":\"Messages_dialogs__SHtFv\",\"user\":\"Messages_user__nf7eo\",\"name\":\"Messages_name__R6jTa\",\"avatar\":\"Messages_avatar__ZnMM9\",\"last__message\":\"Messages_last__message__HTUd8\",\"item\":\"Messages_item__1bytq\",\"list\":\"Messages_list__JHe9C\",\"form\":\"Messages_form__do6TT\",\"input\":\"Messages_input__Flofv\",\"inout\":\"Messages_inout__MPEHB\",\"button\":\"Messages_button__IiPR6\",\"message\":\"Messages_message__KNSOY\",\"me\":\"Messages_me__f+Y-y\",\"active\":\"Messages_active__I2T8k\"};","import { NavLink } from 'react-router-dom';\r\nimport classes from './../Messages.module.css';\r\nconst Dialog = props => {\r\n  return (\r\n    <div className={classes.item}>\r\n      <NavLink className={link => (link.isActive ? classes.active : '') + ' ' + classes.user} to={'' + props.id}>\r\n        <div className={classes.avatar}>\r\n          <img src='https://i.pinimg.com/236x/a9/bb/b4/a9bbb43d833e264c66fce9f8d62601bb.jpg' alt='avatar' />\r\n        </div>\r\n        <div className={classes.userInfo}>\r\n          <div className={classes.name}>{props.name}</div>\r\n          <div className={classes.last__message}>последнее сообщение</div>\r\n        </div>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n","import classes from './../Messages.module.css';\r\n\r\nconst Message = props => {\r\n  return <div className={`${classes.message} ${props.user ? classes.me : ''}`}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import Dialog from './dialog/DialogUserItem';\r\nimport Message from './message/Message';\r\nimport classes from './Messages.module.css';\r\nimport React from 'react';\r\nimport { Form, Field } from 'react-final-form';\r\n\r\nconst Messages = props => {\r\n  const addMessage = messageText => {\r\n    props.addMessage(messageText);\r\n  };\r\n  // Отображение списка пользователей, с кем есть переписка\r\n  let listUser = props.state.dialog.users.map(item => <Dialog key={item.id} name={item.name} id={item.id} />);\r\n\r\n  //Отображение сообщений\r\n  let listMessage = props.state.dialog.message.map((item, i) => (\r\n    <Message key={i} message={item.message} id={item.id} user={item.user} />\r\n  ));\r\n\r\n  return (\r\n    <div className={classes.dialogsWrapper}>\r\n      <div className={classes.dialogs}>{listUser}</div>\r\n      <div className={classes.list}>\r\n        <div className={classes.item}>{listMessage}</div>\r\n        <FieldMessageForm addMessage={addMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FieldMessageForm = props => {\r\n  const onSubmit = (data, e) => {\r\n    props.addMessage(data.message);\r\n    e.reset();\r\n  };\r\n\r\n  const validate = data => {};\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={onSubmit}\r\n      validate={validate}\r\n      render={({ handleSubmit }) => (\r\n        <form onSubmit={handleSubmit} className={classes.form}>\r\n          <Field component='input' name='message' className={classes.input} type='text' autoComplete='off' />\r\n          <button type='submit' className={classes.button}>\r\n            Отправить\r\n          </button>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { addMessage } from '../../redux/dialog-reducer';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport Messages from './Messages';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    state: state,\r\n    messageText: state.dialog.messageText,\r\n  };\r\n};\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     addMessage: () => {\r\n//       let action = addMessageActionCreator();\r\n//       dispatch(action);\r\n//     },\r\n//     onChangeMessage: textPost => {\r\n//       let action = updateTextMessageActionCreator(textPost);\r\n//       dispatch(action);\r\n//     },\r\n//   };\r\n// };\r\n\r\n// let widthRedirectComponent = withAuthRedirect(Messages);\r\n\r\n// let MessagesConteiner = connect(mapStateToProps, {\r\n//   addMessage,\r\n//   onChangeMessage,\r\n// })(widthRedirectComponent);\r\n// export default MessagesConteiner;\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    addMessage,\r\n  }),\r\n  withAuthRedirect\r\n)(Messages);\r\n"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","to","className","classes","link","isActive","id","src","alt","name","user","message","FieldMessageForm","onSubmit","data","e","addMessage","reset","validate","render","handleSubmit","component","type","autoComplete","listUser","dialog","users","map","item","listMessage","i","messageText","compose","Messages"],"sourceRoot":""}