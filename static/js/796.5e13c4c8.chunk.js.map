{"version":3,"file":"static/js/796.5e13c4c8.chunk.js","mappings":"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","sources":["webpack://01_educational-project/./src/components/utils/validators/FormControl.module.css?da3e","components/utils/validators/FormControl.tsx","webpack://01_educational-project/./src/pages/Profile/aboutMe/AboutMe.module.css?2567","webpack://01_educational-project/./src/pages/Profile/aboutMe/profileInfo/ProfileInfo.module.css?33d4","components/common/preloader/Preloader2.tsx","pages/Profile/aboutMe/profileInfo/profileData/ProfileDecription.tsx","webpack://01_educational-project/./src/pages/Profile/aboutMe/profileInfo/ProfileStatus.module.css?0c17","pages/Profile/aboutMe/profileInfo/ProfileStatus.tsx","pages/Profile/aboutMe/profileInfo/ProfileInfo.tsx","pages/Profile/aboutMe/AboutMe.tsx","webpack://01_educational-project/./src/pages/Profile/myPosts/MyPost.module.css?6b9f","webpack://01_educational-project/./src/pages/Profile/myPosts/post/Post.module.css?b226","pages/Profile/myPosts/post/PostItem.tsx","pages/Profile/myPosts/MyPosts.tsx","pages/Profile/myPosts/MyPostsContainer.tsx","webpack://01_educational-project/./src/pages/Profile/Profile.module.css?aa45","webpack://01_educational-project/./src/pages/Profile/MessageModal/MessageModal.module.scss?b674","pages/Profile/MessageModal/MessageModal.tsx","pages/Profile/ProfilPage.tsx","pages/Profile/ProfileContainer.tsx","../node_modules/classnames/index.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"parent\":\"FormControl_parent__lF0UW\",\"error\":\"FormControl_error__5OHJW\"};","import { FC } from 'react';\r\nimport classes from './FormControl.module.css';\r\n\r\nexport const required = (value: string | undefined) => (value ? undefined : 'Обязательно поле');\r\nexport const validateURL = (URL: string) => {\r\n  var regExURL =\r\n    /^[A-Za-z][A-Za-z0-9+\\-.]*:(?:\\/\\/(?:(?:[A-Za-z0-9\\-._~!$&'()*+,;=:]|%[0-9A-Fa-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9A-Fa-f]{1,4}:){6}|::(?:[0-9A-Fa-f]{1,4}:){5}|(?:[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){4}|(?:(?:[0-9A-Fa-f]{1,4}:){0,1}[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){3}|(?:(?:[0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){2}|(?:(?:[0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}:|(?:(?:[0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})?::)(?:[0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))|(?:(?:[0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}|(?:(?:[0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})?::)|[Vv][0-9A-Fa-f]+\\.[A-Za-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|(?:[A-Za-z0-9\\-._~!$&'()*+,;=]|%[0-9A-Fa-f]{2})*)(?::[0-9]*)?(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*|\\/(?:(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})+(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*)?|(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})+(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*|)(?:\\?(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9A-Fa-f]{2})*)?(?:\\#(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9A-Fa-f]{2})*)?$/;\r\n  const response = regExURL.test(URL);\r\n  return response === true || URL == null ? undefined : 'Некорректная ссылка';\r\n};\r\nexport const maxValueCreator = (maxValue: number) => (value: string) =>\r\n  value && value.length > maxValue ? `Не может быть больше ${maxValue}` : undefined;\r\nexport const minValueCreator = (minValue: number) => (value: string) =>\r\n  value && value.length < minValue ? `Минимальная длина ${minValue}` : undefined;\r\n\r\ninterface iFieldForm {\r\n  input: string;\r\n  meta: {\r\n    touched: boolean;\r\n    error: string;\r\n  };\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst FieldForm: FC<iFieldForm> = ({ input, meta: { touched, error }, children }) => {\r\n  const hasError = error && touched;\r\n  return (\r\n    <div className={`${classes.parent} ${hasError ? classes.error : ''} `}>\r\n      {children}\r\n      {hasError && <span>{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Input: FC = (props: any) => {\r\n  const { input, meta, ...restProps } = props;\r\n  return (\r\n    <FieldForm {...props}>\r\n      <input {...restProps} {...input} />\r\n    </FieldForm>\r\n  );\r\n};\r\n\r\nexport const Textarea: FC = (props: any) => {\r\n  const { input, meta, ...restProps } = props;\r\n  return (\r\n    <FieldForm {...props}>\r\n      <textarea {...restProps} {...input} />\r\n    </FieldForm>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"body\":\"AboutMe_body__2-PE3\",\"avatar\":\"AboutMe_avatar__7ZJga\",\"profilePhoto\":\"AboutMe_profilePhoto__yraHj\",\"avatarChange\":\"AboutMe_avatarChange__0YjP1\",\"avatarEdit\":\"AboutMe_avatarEdit__zajYm\",\"newMessage\":\"AboutMe_newMessage__mawLI\"};","// extracted by mini-css-extract-plugin\nexport default {\"ProfileInfo\":\"ProfileInfo_ProfileInfo__NJamY\",\"description\":\"ProfileInfo_description__ZF5gt\",\"itemDescr\":\"ProfileInfo_itemDescr__R12pE\",\"name\":\"ProfileInfo_name__OMJDz\",\"editDescription\":\"ProfileInfo_editDescription__vc8er\",\"form\":\"ProfileInfo_form__PFjci\",\"inputWrap\":\"ProfileInfo_inputWrap__iZi+9\"};","import { FC } from 'react';\r\nimport classes from './Preloader.module.css';\r\n\r\nconst Preloader2: FC = () => {\r\n  return (\r\n    <div className={classes.loaderWrap}>\r\n      <div className={classes.loader}></div>;\r\n    </div>\r\n  );\r\n};\r\nexport default Preloader2;\r\n","import React, { FC, useState } from 'react';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport classes from '../ProfileInfo.module.css';\r\nimport {\r\n  Input,\r\n  required,\r\n  validateURL,\r\n} from '../../../../../components/utils/validators/FormControl';\r\nimport Preloader2 from '../../../../../components/common/preloader/Preloader2';\r\nimport { actions } from '../../../../../redux/reducer/auth-reducer';\r\nimport { ProfileType } from '../../../../../types/reducers-types';\r\n\r\n//Блок с информацией на главной странице пользователя\r\ninterface IProfileProps {\r\n  profile: ProfileType;\r\n  isOwer: boolean | undefined;\r\n  setEditMode: any;\r\n}\r\n\r\nexport const ProfileDecription: FC<IProfileProps> = ({ profile, setEditMode, isOwer }) => {\r\n  return (\r\n    <>\r\n      {profile.aboutMe && (\r\n        <div className={classes.itemDescr}>\r\n          <span> Обо мне:</span> {profile.aboutMe}\r\n        </div>\r\n      )}\r\n      {profile.lookingForAJob && (\r\n        <div className={classes.itemDescr}>\r\n          <span> В поисках работы</span>\r\n        </div>\r\n      )}\r\n      {profile.lookingForAJob && (\r\n        <div className={classes.itemDescr}>\r\n          <span> Профессиональные скиллы:</span> {profile.lookingForAJobDescription}\r\n        </div>\r\n      )}\r\n      {/* Перебераем весь массив contacts и на его основе создаем разметку */}\r\n      {profile.contacts &&\r\n        Object.entries(profile.contacts)\r\n          .filter(item => item[1])\r\n          .map(item => (\r\n            <div key={item[0]} className={classes.itemDescr}>\r\n              <span>{item[0]}:</span>\r\n              <a href={item[1]} target='_blank'>\r\n                {item[1]}\r\n              </a>\r\n            </div>\r\n          ))}\r\n      {/* Поялвятеся только на своей странице(чужие профиля редактировать нельзя) */}\r\n      {isOwer && (\r\n        <button className={classes.editDescription} onClick={() => setEditMode(true)}>\r\n          Редактировать\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface IFormProps {\r\n  profile: ProfileType;\r\n  setEditMode: any;\r\n  saveData: (data: any) => Promise<any>;\r\n  errorMessage: string;\r\n}\r\n//Форма редактирования информации на главной странице\r\nexport const FormDescription: FC<any> = ({ setEditMode, profile, saveData, ...props }) => {\r\n  const [loadDescr, setLoadDescr] = useState(true);\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (data: any) => {\r\n    setLoadDescr(false);\r\n\r\n    saveData(data).then(() => {\r\n      setLoadDescr(true);\r\n      setEditMode(false);\r\n      dispatch(actions.setLogin(data.fullName));\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={onSubmit}\r\n      initialValues={{ ...profile }}\r\n      render={({ handleSubmit }) => (\r\n        <form onSubmit={handleSubmit} className={classes.form}>\r\n          {!loadDescr && <Preloader2 />}\r\n          <label className={classes.inputWrap}>\r\n            <span> Имя</span>\r\n            <Field\r\n              name={'fullName'}\r\n              component={Input}\r\n              type='text'\r\n              placeholder='Имя'\r\n              validate={required}\r\n            />\r\n          </label>\r\n          <label className={classes.inputWrap}>\r\n            <span> Обо мне</span>\r\n            <Field\r\n              name={'aboutMe'}\r\n              component={Input}\r\n              type='text'\r\n              placeholder='Обо мне'\r\n              validate={required}\r\n            />\r\n          </label>\r\n          <label className={classes.inputWrap}>\r\n            <span> Ищу работу</span>\r\n            <Field name={'lookingForAJob'} component='input' type='checkbox' />\r\n          </label>\r\n          <label className={classes.inputWrap}>\r\n            <span>Мои профессиональные скиллы</span>\r\n            <Field\r\n              name={'lookingForAJobDescription'}\r\n              component={Input}\r\n              type='text'\r\n              placeholder='Мои профессиональные скиллы'\r\n            />\r\n          </label>\r\n          <hr />\r\n          <h2>Контакты</h2>\r\n          {profile.contacts &&\r\n            Object.entries(profile.contacts).map((item, i) => (\r\n              <label key={i} className={classes.inputWrap}>\r\n                <span>{item[0]}</span>\r\n                <Field\r\n                  name={`contacts.${item[0]}`}\r\n                  component={Input}\r\n                  type='text'\r\n                  placeholder={item[0]}\r\n                  validate={validateURL}\r\n                />\r\n              </label>\r\n            ))}\r\n          {props.errorMessage && (\r\n            <div className={classes.errorData}>\r\n              <span>{props.errorMessage} </span>\r\n            </div>\r\n          )}\r\n          <div className={classes.inputWrap}>\r\n            <button className={classes.editDescription} type='submit'>\r\n              Сохранить\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"statusWrapper\":\"ProfileStatus_statusWrapper__yjTeL\",\"status\":\"ProfileStatus_status__Azh6L\",\"editStatus\":\"ProfileStatus_editStatus__+SxRf\",\"me\":\"ProfileStatus_me__NeuJS\",\"field-puls\":\"ProfileStatus_field-puls__k9sHt\",\"doublePuls\":\"ProfileStatus_doublePuls__IoV9Q\",\"statusEditInput\":\"ProfileStatus_statusEditInput__rsUpQ\",\"overlay\":\"ProfileStatus_overlay__ZZDC0\"};","import React, { FC, useEffect, useState } from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport { SvgDoubleClick } from '../../../../components/svg/SvgComponents';\r\nimport { ProfileType } from '../../../../types/reducers-types';\r\nimport classes from './ProfileStatus.module.css';\r\n\r\ninterface IProps {\r\n  status: string;\r\n  isOwer: boolean | undefined;\r\n  updateUserStatus: (status: string) => void;\r\n}\r\n\r\nconst ProfileStatus: FC<IProps> = props => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status || ';');\r\n\r\n  const toggleStateField = () => {\r\n    if (props.isOwer) {\r\n      setEditMode(!editMode);\r\n      setStatus(props.status);\r\n    }\r\n  };\r\n\r\n  const onEnterToggleStateField = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.keyCode === 13) {\r\n      toggleStateField();\r\n      props.updateUserStatus(status);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const onChangeInputValue = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setStatus(e.target.value);\r\n  };\r\n  const classStatus = cn(\r\n    {\r\n      [classes.me]: props.isOwer,\r\n    },\r\n    classes.status,\r\n  );\r\n  return (\r\n    <div className={classes.statusWrapper}>\r\n      {!editMode && (\r\n        <div className={classStatus}>\r\n          <span onDoubleClick={toggleStateField}>\r\n            {props.status || (props.isOwer && 'Добавить статус')}\r\n          </span>\r\n          {props.isOwer && (\r\n            <button className={classes.editStatus}>\r\n              <SvgDoubleClick />\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n      {editMode && props.isOwer && (\r\n        <div className={`${classes.status} ${classes.statusEditInput} `}>\r\n          <div className={classes.overlay}></div>\r\n          <input\r\n            onChange={onChangeInputValue}\r\n            autoFocus={true}\r\n            onBlur={toggleStateField}\r\n            onKeyDown={onEnterToggleStateField}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileStatus;\r\n","import { FC, useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { actions } from '../../../../redux/reducer/auth-reducer';\r\nimport { ProfileType } from '../../../../types/reducers-types';\r\nimport { ProfileDecription, FormDescription } from './profileData/ProfileDecription';\r\nimport classes from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus';\r\n\r\ninterface IProps {\r\n  status: string;\r\n  profile: ProfileType;\r\n\r\n  isOwer: boolean | undefined;\r\n  saveData: (data: any) => Promise<any>;\r\n  updateUserStatus: (status: string) => void;\r\n}\r\n\r\nconst ProfileInfo: FC<IProps> = props => {\r\n  return (\r\n    <div className={classes.ProfileInfo}>\r\n      <div className={classes.description}>\r\n        <div className={`${classes.item} ${classes.name}`}>{props.profile.fullName}</div>\r\n\r\n        <ProfileStatus\r\n          status={props.status}\r\n          updateUserStatus={props.updateUserStatus}\r\n          isOwer={props.isOwer}\r\n        />\r\n        <ProfileData profile={props.profile} isOwer={props.isOwer} saveData={props.saveData} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface IProfileDataProps {\r\n  profile: ProfileType;\r\n  isOwer: boolean | undefined;\r\n  saveData: (data: any) => Promise<any>;\r\n}\r\n\r\nconst ProfileData: FC<IProfileDataProps> = props => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (props.isOwer) {\r\n      dispatch(actions.setLogin(props.profile.fullName));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {editMode ? (\r\n        <FormDescription\r\n          setEditMode={setEditMode}\r\n          profile={props.profile}\r\n          saveData={props.saveData}\r\n        />\r\n      ) : (\r\n        <ProfileDecription\r\n          setEditMode={setEditMode}\r\n          profile={props.profile}\r\n          isOwer={props.isOwer}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React, { createRef, FC, useEffect, useState } from 'react';\r\n\r\nimport classes from './AboutMe.module.css';\r\nimport ProfileInfo from './profileInfo/ProfileInfo';\r\nimport avatar from '../../../assets/img/avatar.png';\r\nimport Preloader from '../../../components/common/preloader/Preloader';\r\nimport { ProfileType } from '../../../types/reducers-types';\r\nimport MessageModal from '../MessageModal/MessageModal';\r\n\r\ninterface IProps {\r\n  isOwner: boolean | undefined;\r\n  isLoadAvatar: boolean;\r\n  photo: string | null;\r\n  savePhoto: (file: any) => void;\r\n  id: number;\r\n  isOpen: boolean;\r\n  setOpen: (open: boolean) => void;\r\n  changeOpenModal: () => void;\r\n}\r\nconst Avatar: FC<IProps> = ({\r\n  isOwner,\r\n  isLoadAvatar,\r\n  isOpen,\r\n  setOpen,\r\n  changeOpenModal,\r\n  ...props\r\n}) => {\r\n  const inputFile = createRef<HTMLInputElement>();\r\n\r\n  const onChangePhoto = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files) {\r\n      props.savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    setOpen(false);\r\n  }, [props.id]);\r\n\r\n  return (\r\n    <div className={classes.profilePhoto}>\r\n      <div\r\n        className={classes.avatar}\r\n        onClick={() => {\r\n          inputFile.current?.click();\r\n        }}>\r\n        <img src={props.photo || avatar} alt='avatar' />\r\n        {!isLoadAvatar && <Preloader />}\r\n      </div>\r\n\r\n      {isOwner ? (\r\n        <>\r\n          <input\r\n            className='visibility-hidden'\r\n            ref={inputFile}\r\n            onChange={onChangePhoto}\r\n            type={'file'}\r\n            placeholder={'изменить фото'}\r\n          />\r\n          <button\r\n            disabled={!isLoadAvatar}\r\n            className={classes.avatarChange}\r\n            onClick={() => {\r\n              inputFile.current?.click();\r\n            }}>\r\n            Изменить фото\r\n          </button>\r\n          <button\r\n            disabled={!isLoadAvatar}\r\n            className={classes.avatarEdit}\r\n            onClick={() => {\r\n              inputFile.current?.click();\r\n            }}></button>\r\n        </>\r\n      ) : (\r\n        <button className={classes.newMessage} onClick={changeOpenModal}>\r\n          Написать сообщение\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface IAboutMeProps {\r\n  profile: ProfileType;\r\n  isOwer: boolean | undefined;\r\n  isLoadAvatar: boolean;\r\n  status: string;\r\n  isOpen: boolean;\r\n\r\n  savePhoto: (data: any) => void;\r\n  saveData: (data: any) => Promise<any>;\r\n  updateUserStatus: (status: string) => void;\r\n  setOpen: (open: boolean) => void;\r\n  changeOpenModal: () => void;\r\n}\r\n\r\nconst AboutMe: FC<IAboutMeProps> = props => {\r\n  return (\r\n    <div className={classes.body}>\r\n      <Avatar\r\n        changeOpenModal={props.changeOpenModal}\r\n        isOpen={props.isOpen}\r\n        setOpen={props.setOpen}\r\n        id={props.profile.userId}\r\n        photo={props.profile!.photos.large}\r\n        isOwner={props.isOwer}\r\n        savePhoto={props.savePhoto}\r\n        isLoadAvatar={props.isLoadAvatar}\r\n      />\r\n      <ProfileInfo\r\n        saveData={props.saveData}\r\n        status={props.status}\r\n        isOwer={props.isOwer}\r\n        updateUserStatus={props.updateUserStatus}\r\n        profile={props.profile}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default AboutMe;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"blog\":\"MyPost_blog__945+S\",\"form\":\"MyPost_form__f2r-B\",\"textarea\":\"MyPost_textarea__inXzp\",\"button\":\"MyPost_button__liud0\"};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__uUe5J\",\"body\":\"Post_body__t83z7\",\"avatar\":\"Post_avatar__5EbmQ\",\"content\":\"Post_content__n6xXG\",\"tools\":\"Post_tools__ZzmrB\",\"count\":\"Post_count__jXUSM\"};","import { FC } from 'react';\r\n\r\nimport classes from './Post.module.css';\r\nimport avatar from '../../../../assets/img/avatar.png';\r\ninterface PropsType {\r\n  photo: string;\r\n  message: string;\r\n  shareCount: number;\r\n  likeCount: number;\r\n  id: number;\r\n}\r\n\r\nconst Post: FC<PropsType> = props => {\r\n  return (\r\n    <div className={classes.post}>\r\n      <div className={classes.body}>\r\n        <div className={classes.avatar}>\r\n          <img src={!props.photo ? avatar : props.photo} alt='avatar' />\r\n        </div>\r\n        <div className={classes.content}>{props.message}</div>\r\n      </div>\r\n      <div className={classes.tools}>\r\n        <span className={classes.share}>\r\n          <span className={classes.count}>\r\n            <svg\r\n              xmlns='http://www.w3.org/2000/svg'\r\n              version='1.1'\r\n              xmlnsXlink='http://www.w3.org/1999/xlink'\r\n              width='512'\r\n              height='512'\r\n              x='0'\r\n              y='0'\r\n              viewBox='0 0 128 128'\r\n              xmlSpace='preserve'>\r\n              <g>\r\n                <path\r\n                  xmlns='http://www.w3.org/2000/svg'\r\n                  id='Share'\r\n                  d='m8 116c-.305 0-.613-.035-.918-.105-1.805-.43-3.082-2.04-3.082-3.895 0-36.348 4.598-66.578 60-67.953v-28.047c0-1.59.941-3.027 2.395-3.664 1.449-.633 3.148-.359 4.32.727l52 48c.82.753 1.285 1.82 1.285 2.937s-.465 2.184-1.285 2.938l-52 48c-1.168 1.086-2.867 1.367-4.32.727-1.454-.638-2.395-2.075-2.395-3.665v-27.953c-38.004.91-45.016 14.93-52.422 29.742-.687 1.379-2.09 2.211-3.578 2.211zm60-40c2.211 0 4 1.789 4 4v22.863l42.102-38.863-42.102-38.863v22.863c0 2.211-1.789 4-4 4-44.188 0-53.703 17.09-55.574 44.387 8.285-11.129 22.406-20.387 55.574-20.387z'\r\n                  fill='currentColor'\r\n                  data-original='#000000'\r\n                />\r\n              </g>\r\n            </svg>\r\n            {props.shareCount}\r\n          </span>\r\n        </span>\r\n        <span className={classes.like}>\r\n          <span className={classes.count}>\r\n            <svg\r\n              xmlns='http://www.w3.org/2000/svg'\r\n              version='1.1'\r\n              xmlnsXlink='http://www.w3.org/1999/xlink'\r\n              width='512'\r\n              height='512'\r\n              x='0'\r\n              y='0'\r\n              viewBox='0 0 512.001 512'\r\n              xmlSpace='preserve'>\r\n              <g>\r\n                <path\r\n                  xmlns='http://www.w3.org/2000/svg'\r\n                  d='m256 455.515625c-7.289062 0-14.316406-2.640625-19.792969-7.4375-20.683593-18.085937-40.625-35.082031-58.21875-50.074219l-.089843-.078125c-51.582032-43.957031-96.125-81.917969-127.117188-119.3125-34.644531-41.804687-50.78125-81.441406-50.78125-124.742187 0-42.070313 14.425781-80.882813 40.617188-109.292969 26.503906-28.746094 62.871093-44.578125 102.414062-44.578125 29.554688 0 56.621094 9.34375 80.445312 27.769531 12.023438 9.300781 22.921876 20.683594 32.523438 33.960938 9.605469-13.277344 20.5-24.660157 32.527344-33.960938 23.824218-18.425781 50.890625-27.769531 80.445312-27.769531 39.539063 0 75.910156 15.832031 102.414063 44.578125 26.191406 28.410156 40.613281 67.222656 40.613281 109.292969 0 43.300781-16.132812 82.9375-50.777344 124.738281-30.992187 37.398437-75.53125 75.355469-127.105468 119.308594-17.625 15.015625-37.597657 32.039062-58.328126 50.167969-5.472656 4.789062-12.503906 7.429687-19.789062 7.429687zm-112.96875-425.523437c-31.066406 0-59.605469 12.398437-80.367188 34.914062-21.070312 22.855469-32.675781 54.449219-32.675781 88.964844 0 36.417968 13.535157 68.988281 43.882813 105.605468 29.332031 35.394532 72.960937 72.574219 123.476562 115.625l.09375.078126c17.660156 15.050781 37.679688 32.113281 58.515625 50.332031 20.960938-18.253907 41.011719-35.34375 58.707031-50.417969 50.511719-43.050781 94.136719-80.222656 123.46875-115.617188 30.34375-36.617187 43.878907-69.1875 43.878907-105.605468 0-34.515625-11.605469-66.109375-32.675781-88.964844-20.757813-22.515625-49.300782-34.914062-80.363282-34.914062-22.757812 0-43.652344 7.234374-62.101562 21.5-16.441406 12.71875-27.894532 28.796874-34.609375 40.046874-3.453125 5.785157-9.53125 9.238282-16.261719 9.238282s-12.808594-3.453125-16.261719-9.238282c-6.710937-11.25-18.164062-27.328124-34.609375-40.046874-18.449218-14.265626-39.34375-21.5-62.097656-21.5zm0 0'\r\n                  fill='currentColor'\r\n                  data-original='#000000'\r\n                />\r\n              </g>\r\n            </svg>\r\n            {props.likeCount}\r\n          </span>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React, { FC } from 'react';\r\nimport classes from './MyPost.module.css';\r\nimport Post from './post/PostItem';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { PostType } from './MyPostsContainer';\r\n\r\ninterface PropsType {\r\n  addPost: (text: string) => void;\r\n  post: Array<PostType>;\r\n  photo: string;\r\n  isOwer: boolean;\r\n}\r\n\r\nconst MyPost: FC<PropsType> = props => {\r\n  const addPost = (text: string) => {\r\n    props.addPost(text);\r\n  };\r\n  let Posts = [...props.post].reverse().map((post, i) => {\r\n    return (\r\n      <Post\r\n        key={i}\r\n        id={post.id}\r\n        message={post.message}\r\n        likeCount={post.likeCount}\r\n        shareCount={post.shareCount}\r\n        photo={props.photo}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {props.isOwer && <FieldPostForm addPost={addPost} />}\r\n      <div className={classes.blog}>{Posts}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst FieldPostForm = (props: any) => {\r\n  const onSubmit = (data: any, e: any) => {\r\n    props.addPost(data.post);\r\n    e.reset();\r\n  };\r\n  const validate = (values: any): any => {};\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={onSubmit}\r\n      validate={validate}\r\n      render={({ handleSubmit }) => (\r\n        <form onSubmit={handleSubmit} action='#' className={classes.form}>\r\n          <Field component='textarea' className={classes.textarea} name='post' autoComplete='off' />\r\n          <button type='submit' className={classes.button}>\r\n            Добавить запись\r\n          </button>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MyPost;\r\n","import { connect } from 'react-redux';\r\n\r\nimport { ProfileActions } from '../../../redux/reducer/profile-reducer';\r\nimport { PhotosType, UserType } from '../../../types/reducers-types';\r\nimport MyPost from './MyPosts';\r\n\r\nconst { addPost } = ProfileActions;\r\nexport interface PostType {\r\n  id: number;\r\n  message: string;\r\n  likeCount: number;\r\n  shareCount: number;\r\n  photo: PhotosType;\r\n}\r\n\r\ninterface ProfileType {\r\n  textPost: string;\r\n  profile: UserType;\r\n  post: PostType;\r\n}\r\n\r\ninterface PropsType {\r\n  profile: ProfileType;\r\n}\r\n\r\nlet mapStateToProps = (state: any) => {\r\n  return {\r\n    post: state.profile.post,\r\n    photo: state.profile.profile!.photos.small,\r\n  };\r\n};\r\n\r\nlet MyPostContainer: any = connect(mapStateToProps, {\r\n  addPost,\r\n})(MyPost);\r\n\r\nexport default MyPostContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Profile_wrapper__fcNRJ\",\"header\":\"Profile_header__ibsMU\"};","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"MessageModal_overlay__jJ32S\",\"modal\":\"MessageModal_modal__QhM22\",\"window\":\"MessageModal_window__JMBCA\",\"close\":\"MessageModal_close__EJwCQ\",\"form\":\"MessageModal_form__ZAJMh\",\"animate\":\"MessageModal_animate__zVnDd\",\"fade-in\":\"MessageModal_fade-in__6I0wC\"};","import { useDispatch } from 'react-redux';\r\nimport React, { FC, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { SvgClose, SvgSend } from '../../../components/svg/SvgComponents';\r\nimport { getDialogs, sendMessageDialog, startDialog } from '../../../redux/reducer/dialog-reducer';\r\nimport cl from './MessageModal.module.scss';\r\n\r\ninterface IProps {\r\n  clickHandler: () => void;\r\n  id: number;\r\n  userName: string;\r\n}\r\nconst MessageModal: FC<IProps> = ({ clickHandler, id, userName }) => {\r\n  const location = useNavigate();\r\n  const [message, setMessage] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const sendNewMessage = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    dispatch(startDialog(id));\r\n    dispatch(sendMessageDialog(id, message));\r\n    dispatch(getDialogs());\r\n    setMessage('');\r\n    location('/messages');\r\n  };\r\n\r\n  return (\r\n    <div className={cl.animate}>\r\n      <div className={cl.overlay} onClick={clickHandler}></div>\r\n      <div className={cl.modal}>\r\n        <div className={cl.window}>\r\n          <button onClick={clickHandler} className={cl.close}>\r\n            <SvgClose />\r\n          </button>\r\n          <h3>Написать сообщение {userName}</h3>\r\n          <form onSubmit={sendNewMessage} className={cl.form}>\r\n            <input\r\n              autoComplete='off'\r\n              autoFocus={true}\r\n              value={message}\r\n              onChange={e => setMessage(e.target.value)}\r\n              name='message'></input>\r\n            <button>\r\n              <SvgSend />\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageModal;\r\n","import React, { FC } from 'react';\r\nimport { useState } from 'react';\r\n\r\nimport { ProfileType } from '../../types/reducers-types';\r\nimport Preloader from '../../components/common/preloader/Preloader';\r\nimport AboutMe from './aboutMe/AboutMe';\r\nimport MyPostContainer from './myPosts/MyPostsContainer';\r\nimport classes from './Profile.module.css';\r\nimport MessageModal from './MessageModal/MessageModal';\r\n\r\ninterface PropsType {\r\n  isOwner?: boolean | undefined;\r\n  profile: ProfileType;\r\n  loadProfile: boolean;\r\n  status: string | null;\r\n  isLoadAvatar: boolean;\r\n\r\n  updateUserStatus: (status: string) => void;\r\n  savePhoto: (data: any) => void;\r\n  saveData: (data: any) => Promise<any>;\r\n}\r\n\r\nconst ProfilePage: FC<PropsType> = React.memo(props => {\r\n  const [isOpen, setOpen] = useState(false);\r\n  //Если страница профиля еще не загружена, отобразить спиннер\r\n\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n  const changeOpenModal = () => {\r\n    setOpen(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.wrapper}>\r\n        {/* Если ответ с данными о конкретной странице еще не пришел с сервера, отобразить спиннер */}\r\n        {!props.loadProfile && <Preloader />}\r\n        <AboutMe\r\n          profile={props.profile}\r\n          status={props.status ? props.status : ''}\r\n          updateUserStatus={props.updateUserStatus}\r\n          isOwer={props.isOwner}\r\n          savePhoto={props.savePhoto}\r\n          isLoadAvatar={props.isLoadAvatar}\r\n          saveData={props.saveData}\r\n          isOpen={isOpen}\r\n          setOpen={setOpen}\r\n          changeOpenModal={changeOpenModal}\r\n        />\r\n        <MyPostContainer isOwer={props.isOwner} />{' '}\r\n        {isOpen && (\r\n          <MessageModal\r\n            userName={props.profile.fullName}\r\n            id={props.profile.userId}\r\n            clickHandler={changeOpenModal}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default ProfilePage;\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport ProfilePage from './ProfilPage';\r\nimport {\r\n  getStatus,\r\n  ProfileActions,\r\n  updateUserStatus,\r\n  savePhoto,\r\n  saveData,\r\n} from '../../redux/reducer/profile-reducer';\r\nimport { isAuthorization } from '../../redux/reducer/auth-reducer';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { userAPI } from '../../api/api';\r\nimport { RootStateType } from '../../redux/store-redux';\r\nimport { ProfileType } from '../../types/reducers-types';\r\n\r\nconst { setUserProfile } = ProfileActions;\r\n\r\nconst mapStateToProps = (state: RootStateType) => ({\r\n  profile: state.profile.profile,\r\n  status: state.profile.status,\r\n  userId: state.auth.userId,\r\n  isLoadAvatar: state.profile.isLoadAvatar,\r\n});\r\n\r\ninterface PropsType {\r\n  userId: number;\r\n  isOwer: boolean;\r\n  profile: ProfileType;\r\n  loadProfile: boolean;\r\n  status: string | null;\r\n  isLoadAvatar: boolean;\r\n\r\n  updateUserStatus: (status: string) => void;\r\n  getStatus: (id: number) => void;\r\n  setUserProfile: (data: any) => void;\r\n  saveData: (data: any) => Promise<any>;\r\n  savePhoto: (data: any) => void;\r\n}\r\n\r\nconst ProfileContainer: FC<PropsType> = props => {\r\n  //Получаем параметр страницы profile/:id\r\n  const { id } = useParams();\r\n\r\n  const [loadProfile, setLoadProfile] = useState(false);\r\n  useEffect(() => {\r\n    let userId: number | undefined = id ? +id : undefined;\r\n    if (!userId) {\r\n      //Если url равен profile, то userId присвоить значение вошедшего пользователя\r\n      userId = props.userId;\r\n    }\r\n    //Запрашиваем статус\r\n    props.getStatus(userId);\r\n\r\n    //Меням на false,чтобы спиннер показался\r\n    setLoadProfile(false);\r\n\r\n    userAPI.getProfile(userId).then(response => {\r\n      props.setUserProfile(response.data);\r\n      //Меняем на true,чтобы спиннер исчез\r\n      setLoadProfile(true);\r\n    });\r\n  }, [id]);\r\n\r\n  return (\r\n    <ProfilePage\r\n      {...props}\r\n      isOwner={!id}\r\n      loadProfile={loadProfile}\r\n      savePhoto={props.savePhoto}\r\n      saveData={props.saveData}\r\n    />\r\n  );\r\n};\r\n\r\n//!!РЕАЛИЦИЯ ЧЕРЕЗ КЛАССОВУЮ КОМПОНЕНТУ\r\n// class ProfileContainer extends React.Component {\r\n//   refreshProfile() {\r\n//     let userId = this.props.params.id;\r\n//     if (!userId) {\r\n//       userId = this.props.userId;\r\n//     }\r\n//     this.props.getStatus(userId);\r\n\r\n//     userAPI.getProfile(userId).then(response => {\r\n//       this.props.setUserProfile(response.data);\r\n//     });\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     this.refreshProfile();\r\n//   }\r\n\r\n//   componentDidUpdate(prevProps, prevState, snapshot) {\r\n//     // Если Id из текущих props != Id из прошлых props, меняем\r\n//     if (this.props.params.id !== prevProps.params.id) {\r\n//       this.refreshProfile();\r\n//     }\r\n//   }\r\n\r\n//   render() {\r\n//     return <ProfilePage {...this.props} />;\r\n//   }\r\n// }\r\n\r\nexport default compose<any>(\r\n  connect(mapStateToProps, {\r\n    setUserProfile,\r\n    isAuthorization,\r\n    getStatus,\r\n    updateUserStatus,\r\n    savePhoto,\r\n    saveData,\r\n  }),\r\n  withAuthRedirect,\r\n)(ProfileContainer);\r\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}"],"names":["required","value","undefined","validateURL","URL","test","maxValueCreator","maxValue","length","minValueCreator","minValue","FieldForm","input","meta","touched","error","children","hasError","className","classes","Input","props","restProps","ProfileDecription","profile","setEditMode","isOwer","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","Object","entries","filter","item","map","href","target","onClick","FormDescription","saveData","useState","loadDescr","setLoadDescr","dispatch","useDispatch","onSubmit","data","then","actions","fullName","initialValues","render","handleSubmit","name","component","type","placeholder","validate","i","errorMessage","editMode","status","setStatus","toggleStateField","useEffect","classStatus","cn","onDoubleClick","onChange","e","autoFocus","onBlur","onKeyDown","keyCode","updateUserStatus","ProfileData","Avatar","isOwner","isLoadAvatar","setOpen","isOpen","changeOpenModal","inputFile","createRef","id","current","click","src","photo","avatar","alt","Preloader","ref","files","savePhoto","disabled","userId","photos","large","message","xmlns","version","xmlnsXlink","width","height","x","y","viewBox","xmlSpace","d","fill","shareCount","likeCount","FieldPostForm","addPost","post","reset","values","action","autoComplete","Posts","reverse","text","ProfileActions","connect","state","small","MyPost","clickHandler","userName","location","useNavigate","setMessage","cl","stopPropagation","preventDefault","startDialog","sendMessageDialog","getDialogs","React","prev","loadProfile","setUserProfile","compose","auth","isAuthorization","getStatus","withAuthRedirect","useParams","setLoadProfile","userAPI","response","hasOwn","hasOwnProperty","classNames","arguments","arg","argType","push","Array","isArray","inner","apply","toString","prototype","key","call","join","module","exports","default","_objectWithoutProperties","source","excluded","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable"],"sourceRoot":""}