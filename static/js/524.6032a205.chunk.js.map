{"version":3,"file":"static/js/524.6032a205.chunk.js","mappings":"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","sources":["componetns/hoc/withAuthRedirect.js","webpack://01_educational-project/./src/componetns/profile/aboutMe/AboutMe.module.css?22f7","webpack://01_educational-project/./src/componetns/profile/aboutMe/profileInfo/ProfileInfo.module.css?fe2f","webpack://01_educational-project/./src/componetns/profile/aboutMe/profileInfo/ProfileStatus.module.css?a945","componetns/profile/aboutMe/profileInfo/ProfileStatusWithHooks.jsx","componetns/profile/aboutMe/profileInfo/ProfileInfo.jsx","componetns/profile/aboutMe/AboutMe.jsx","webpack://01_educational-project/./src/componetns/profile/myPosts/MyPost.module.css?cc67","webpack://01_educational-project/./src/componetns/profile/myPosts/post/Post.module.css?1536","componetns/profile/myPosts/post/MyPosts.jsx","componetns/profile/myPosts/MyPosts.jsx","componetns/profile/myPosts/MyPostsConteiner.jsx","webpack://01_educational-project/./src/componetns/profile/Profile.module.css?df4c","componetns/profile/ProfilPage.jsx","componetns/profile/ProfileContaner.jsx"],"sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport const withAuthRedirect = Component => {\r\n  const RedirectComponent = props => {\r\n    if (!props.isAuth) return <Navigate to={'/login'} />;\r\n    return <Component {...props} />;\r\n  };\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"body\":\"AboutMe_body__4JJ4p\",\"avatar\":\"AboutMe_avatar__9KZfq\",\"profilePhoto\":\"AboutMe_profilePhoto__V-1WE\",\"avatarChange\":\"AboutMe_avatarChange__ebw5J\"};","// extracted by mini-css-extract-plugin\nexport default {\"ProfileInfo\":\"ProfileInfo_ProfileInfo__IQMHf\",\"description\":\"ProfileInfo_description__i84vk\",\"item\":\"ProfileInfo_item__o39Op\",\"name\":\"ProfileInfo_name__YYCwk\"};","// extracted by mini-css-extract-plugin\nexport default {\"statusWrapper\":\"ProfileStatus_statusWrapper__zl5+c\",\"status\":\"ProfileStatus_status__fdH7s\",\"overlay\":\"ProfileStatus_overlay__BENyS\"};","import React, { useEffect, useState } from 'react';\r\nimport classes from './ProfileStatus.module.css';\r\n\r\nconst ProfileStatusWithHooks = props => {\r\n  const [editMode, seteditMode] = useState(false);\r\n  const [status, setstatus] = useState(props.status || '');\r\n  const toggleStateField = () => {\r\n    if (props.isOwer) {\r\n      seteditMode(!editMode);\r\n    }\r\n  };\r\n  const onEnterToggleStateField = e => {\r\n    if (e.keyCode === 13) {\r\n      toggleStateField();\r\n      props.updateUserStatus(status);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    setstatus(props.status);\r\n  }, [props.status]);\r\n  const onChangeIputValue = e => {\r\n    setstatus(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.statusWrapper}>\r\n      {!editMode && (\r\n        <div className={classes.status}>\r\n          <span onDoubleClick={toggleStateField}>{props.status || (props.isOwer && 'Добавь статус')}</span>\r\n        </div>\r\n      )}\r\n      {editMode && props.isOwer && (\r\n        <div className={classes.status}>\r\n          <div className={classes.overlay}></div>\r\n          <input\r\n            onChange={onChangeIputValue}\r\n            autoFocus={true}\r\n            onBlur={toggleStateField}\r\n            onKeyDown={onEnterToggleStateField}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileStatusWithHooks;\r\n","import classes from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = props => {\r\n  return (\r\n    <div className={classes.ProfileInfo}>\r\n      <div className={classes.description}>\r\n        <div className={`${classes.item} ${classes.name}`}>{props.fullName}</div>\r\n\r\n        {props.description && (\r\n          <div className={classes.item}>\r\n            <span> Обо мне:</span> {props.description}\r\n          </div>\r\n        )}\r\n\r\n        <ProfileStatusWithHooks status={props.status} updateUserStatus={props.updateUserStatus} isOwer={props.isOwer} />\r\n\r\n        <div className={classes.item}>\r\n          <span>День рождения:</span> 10.10.2001\r\n        </div>\r\n        <div className={classes.item}>\r\n          <span> Город:</span> Уссурийск\r\n        </div>\r\n        <div className={classes.item}>\r\n          <span>Образование: </span> Незаконченное высшее\r\n        </div>\r\n\r\n        <hr />\r\n        {props.twitter && (\r\n          <div className={classes.item}>\r\n            <span>Twitter:</span>\r\n            <a href={props.twitter}> {props.twitter}</a>\r\n          </div>\r\n        )}\r\n        {props.vk && (\r\n          <div className={classes.item}>\r\n            <span>vk:</span>\r\n            <a href={props.vk}> {props.vk}</a>\r\n          </div>\r\n        )}\r\n        {props.instagram && (\r\n          <div className={classes.item}>\r\n            <span>instagram:</span>\r\n            <a href={props.instagram}> {props.instagram}</a>\r\n          </div>\r\n        )}\r\n        {props.github && (\r\n          <div className={classes.item}>\r\n            <span>github:</span>\r\n            <a href={props.github}> {props.github}</a>\r\n          </div>\r\n        )}\r\n        {props.website && (\r\n          <div className={classes.item}>\r\n            <span>website:</span>\r\n            <a href={props.website}> {props.website}</a>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileInfo;\r\n","import classes from './AboutMe.module.css';\r\nimport ProfileInfo from './profileInfo/ProfileInfo';\r\nimport avatar from '../../../assets/img/avatar.png';\r\nimport React, { createRef } from 'react';\r\nimport Preloader from '../../common/preloader/Preloader';\r\n\r\nconst Avatar = ({ isOwer, isLoadAvatar, ...props }) => {\r\n  const inputFile = createRef();\r\n  const onChangePhoto = e => {\r\n    if (e.target.files) {\r\n      props.savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n  // if (!isLoadAvatar) {\r\n  //   return <Preloader />;\r\n  // }\r\n  return (\r\n    <div className={classes.profilePhoto}>\r\n      <div className={classes.avatar}>\r\n        <img src={props.photo || avatar} alt='avatar' />\r\n        {!isLoadAvatar && <Preloader />}\r\n      </div>\r\n\r\n      {isOwer && (\r\n        <>\r\n          <input\r\n            className='visibility-hidden'\r\n            ref={inputFile}\r\n            onChange={onChangePhoto}\r\n            type={'file'}\r\n            placeholder={'изменить фото'}\r\n          />\r\n          <button\r\n            disabled={!isLoadAvatar}\r\n            className={classes.avatarChange}\r\n            onClick={() => {\r\n              inputFile.current.click();\r\n            }}>\r\n            Изменить фото\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AboutMe = props => {\r\n  return (\r\n    <div className={classes.body}>\r\n      <Avatar\r\n        photo={props.profile.photos.large}\r\n        isOwer={props.isOwer}\r\n        savePhoto={props.savePhoto}\r\n        isLoadAvatar={props.isLoadAvatar}\r\n      />\r\n      <ProfileInfo\r\n        status={props.status}\r\n        isOwer={props.isOwer}\r\n        updateUserStatus={props.updateUserStatus}\r\n        description={props.profile.aboutMe}\r\n        fullName={props.profile.fullName}\r\n        twitter={props.profile.contacts.twitter}\r\n        vk={props.profile.contacts.vk}\r\n        instagram={props.profile.contacts.instagram}\r\n        github={props.profile.contacts.github}\r\n        website={props.profile.contacts.website}\r\n        lookingForAJob={props.profile.lookingForAJob}\r\n        jobDecription={props.profile.lookingForAJobDescription}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default AboutMe;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MyPost_form__T7Bfq\",\"textarea\":\"MyPost_textarea__NKHol\",\"button\":\"MyPost_button__NdlMG\"};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__Deqlx\",\"body\":\"Post_body__2Ujn9\",\"avatar\":\"Post_avatar__LsbHg\",\"content\":\"Post_content__sotKc\",\"tools\":\"Post_tools__q+7yq\",\"count\":\"Post_count__bonHO\"};","import classes from './Post.module.css';\r\nimport avatar from '../../../../assets/img/avatar.png';\r\nconst Post = props => {\r\n  return (\r\n    <div className={classes.post}>\r\n      <div className={classes.body}>\r\n        <div className={classes.avatar}>\r\n          <img src={!props.photo ? avatar : props.photo} alt='avatar' />\r\n        </div>\r\n        <div className={classes.content}>{props.message}</div>\r\n      </div>\r\n      <div className={classes.tools}>\r\n        <span className={classes.share}>\r\n          <span className={classes.count}>{props.shareCount}</span>\r\n          Подделиться\r\n        </span>\r\n        <span className={classes.comment}>Коммент</span>\r\n        <span className={classes.like}>\r\n          <span className={classes.count}>{props.likeCount}</span> Лайк\r\n        </span>\r\n        <span className={classes.like}>\r\n          <span className={classes.count}>{props.date ? props.date : ''}</span>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport classes from './MyPost.module.css';\r\nimport Post from './post/MyPosts';\r\nimport { Form, Field } from 'react-final-form';\r\n\r\nconst MyPost = props => {\r\n  const addPost = text => {\r\n    props.addPost(text);\r\n  };\r\n  let Posts = [...props.post].reverse().map(post => {\r\n    const date =\r\n      (post.date.getMonth() < 10 ? '0' + post.date.getMonth() : post.date.getMonth()) +\r\n      '        ' +\r\n      (post.date.getDay() < 10 ? '0' + post.date.getDay() : post.date.getDay()) +\r\n      ':' +\r\n      (post.date.getHours() < 10 ? '0' + post.date.getHours() : post.date.getHours()) +\r\n      ':' +\r\n      (post.date.getMinutes() < 10 ? '0' + post.date.getMinutes() : post.date.getMinutes());\r\n    return (\r\n      <Post\r\n        key={post.id}\r\n        id={post.id}\r\n        message={post.message}\r\n        likeCount={post.likeCount}\r\n        shareCount={post.shareCount}\r\n        photo={props.photo}\r\n        date={date}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {props.isOwer && <FieldPostForm addPost={addPost} />}\r\n\r\n      {Posts}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FieldPostForm = props => {\r\n  const onSubmit = (data, e) => {\r\n    props.addPost(data.post);\r\n    e.reset();\r\n  };\r\n  const validate = data => {};\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={onSubmit}\r\n      validate={validate}\r\n      render={({ handleSubmit }) => (\r\n        <form onSubmit={handleSubmit} action='#' className={classes.form}>\r\n          <Field component='textarea' className={classes.textarea} name='post' autoComplete='off' />\r\n          <button type='submit' className={classes.button}>\r\n            Добавить запись\r\n          </button>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MyPost;\r\n","import { connect } from 'react-redux';\r\nimport { addPost } from '../../../redux/profile-reducer';\r\nimport MyPost from './MyPosts';\r\n\r\nlet mapStateToProps = state => {\r\n  return {\r\n    post: state.profile.post,\r\n    valueText: state.profile.textPost,\r\n    photo: state.profile.profile.photos.small,\r\n  };\r\n};\r\n\r\nlet MyPostConteiner = connect(mapStateToProps, {\r\n  addPost,\r\n})(MyPost);\r\n\r\nexport default MyPostConteiner;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Profile_wrapper__R1wLa\",\"header\":\"Profile_header__drWVh\"};","import Preloader from '../common/preloader/Preloader';\r\nimport AboutMe from './aboutMe/AboutMe';\r\nimport MyPostConteiner from './myPosts/MyPostsConteiner';\r\nimport classes from './Profile.module.css';\r\n\r\nconst ProfilePage = props => {\r\n  //Если страница профиля еще не загружена, отобразить спиннер\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.header}>\r\n        <img src='https://7oom.ru/wp-content/uploads/peizaji-01.jpg' alt='' />\r\n      </div>\r\n      <div className={classes.wrapper}>\r\n        {/* Если ответ с данными о конкретной странице еще не пришел с сервера, отобразить спиннер */}\r\n        {!props.loadProfile && <Preloader />}\r\n\r\n        <AboutMe\r\n          profile={props.profile}\r\n          status={props.status}\r\n          updateUserStatus={props.updateUserStatus}\r\n          isOwer={props.isOwer}\r\n          savePhoto={props.savePhoto}\r\n          isLoadAvatar={props.isLoadAvatar}\r\n        />\r\n        <MyPostConteiner profile={props.profile} isOwer={props.isOwer} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ProfilePage from './ProfilPage';\r\nimport { getStatus, setUserProfile, updateUserStatus, savePhoto } from '../../redux/profile-reducer';\r\nimport { isAuthorization } from '../../redux/auth-reducer';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { userAPI } from '../../api';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile.profile,\r\n  status: state.profile.status,\r\n  userId: state.auth.userId,\r\n  isLoadAvatar: state.profile.isLoadAvatar,\r\n});\r\n\r\nconst ProfileContainer = props => {\r\n  //Получаем параметр страницы profile/:id\r\n  const { id } = useParams();\r\n  const [loadProfile, setLoadProfile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let userId = id;\r\n    if (!userId) {\r\n      //Если url равен profile, то userId присвоить значение вошедшего пользователя\r\n      userId = props.userId;\r\n    }\r\n    //Запрашиваем статус\r\n    props.getStatus(userId);\r\n\r\n    //Меням на false,чтобы спиннер показался\r\n    setLoadProfile(false);\r\n\r\n    userAPI.getProfile(userId).then(response => {\r\n      props.setUserProfile(response.data);\r\n      //Меняем на true,чтобы спиннер исчез\r\n      setLoadProfile(true);\r\n    });\r\n  }, [id]);\r\n\r\n  return <ProfilePage {...props} isOwer={!id} loadProfile={loadProfile} savePhoto={props.savePhoto} />;\r\n};\r\n\r\n//!!РЕАЛИЦИЯ ЧЕРЕЗ КЛАССОВУЮ КОМПОНЕНТУ\r\n// class ProfileContainer extends React.Component {\r\n//   refreshProfile() {\r\n//     let userId = this.props.params.id;\r\n//     if (!userId) {\r\n//       userId = this.props.userId;\r\n//     }\r\n//     this.props.getStatus(userId);\r\n\r\n//     userAPI.getProfile(userId).then(response => {\r\n//       this.props.setUserProfile(response.data);\r\n//     });\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     this.refreshProfile();\r\n//   }\r\n\r\n//   componentDidUpdate(prevProps, prevState, snapshot) {\r\n//     // Если Id из текущих props != Id из прошлых props, меняем\r\n//     if (this.props.params.id !== prevProps.params.id) {\r\n//       this.refreshProfile();\r\n//     }\r\n//   }\r\n\r\n//   render() {\r\n//     return <ProfilePage {...this.props} />;\r\n//   }\r\n// }\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { setUserProfile, isAuthorization, getStatus, updateUserStatus, savePhoto }),\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","to","useState","editMode","seteditMode","status","setstatus","toggleStateField","isOwer","useEffect","className","classes","onDoubleClick","onChange","e","target","value","autoFocus","onBlur","onKeyDown","keyCode","updateUserStatus","fullName","description","twitter","href","vk","instagram","github","website","Avatar","isLoadAvatar","inputFile","createRef","src","photo","avatar","alt","Preloader","ref","files","savePhoto","type","placeholder","disabled","onClick","current","click","profile","photos","large","aboutMe","contacts","lookingForAJob","jobDecription","lookingForAJobDescription","message","shareCount","likeCount","date","FieldPostForm","onSubmit","data","addPost","post","reset","validate","render","handleSubmit","action","component","name","autoComplete","Posts","reverse","map","getMonth","getDay","getHours","getMinutes","id","text","valueText","textPost","small","MyPost","loadProfile","compose","userId","setUserProfile","isAuthorization","getStatus","useParams","setLoadProfile","userAPI","then","response"],"sourceRoot":""}