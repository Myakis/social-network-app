{"version":3,"file":"static/js/242.382cab88.chunk.js","mappings":"oLACA,MAAuB,oBAAvB,EAAuD,yBAAvD,EAA4F,yB,oECoBtFA,EAAY,SAAAC,GAChB,IAGMC,GAAWC,EAAAA,EAAAA,IAAgB,IAC3BC,GAAWC,EAAAA,EAAAA,IAAgB,IAC3BC,EACJ,sCAAIC,EAAJ,yBAAIA,EAAJ,uBACA,SAAAC,GAAK,OACHD,EAAWE,QAAO,SAACC,EAAOC,GAAR,OAAsBD,GAASC,EAAUH,UAAQI,KAEvE,OACE,SAAC,KAAD,CACEC,SAZa,SAAAC,GACfb,EAAMc,MAAMD,EAAKE,MAAOF,EAAKG,SAAUH,EAAKI,WAAYJ,EAAKK,UAY3DC,OAAQ,gBAAGC,EAAH,EAAGA,aAAH,OACN,kBAAMR,SAAUQ,EAAcC,UAAWC,EAAcC,OAAO,GAA9D,WACE,gBAAKF,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEE,KAAM,QACNC,UAAWC,EAAAA,GACXC,KAAK,OACLC,YAAY,QACZC,SAAUxB,EAAkByB,EAAAA,GAAU7B,QAG1C,gBAAKoB,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEE,KAAM,WACNC,UAAWC,EAAAA,GACXC,KAAK,WACLC,YAAY,uCACZC,SAAUxB,EAAkByB,EAAAA,GAAU3B,QAG1C,mBAAOkB,UAAWC,EAAlB,WACE,SAAC,KAAD,CAAOE,KAAM,aAAcC,UAAU,QAAQE,KAAK,aADpD,qFAIC3B,EAAM+B,aACL,iCACE,gBAAKC,IAAKhC,EAAM+B,WAAYE,IAAI,aAChC,SAAC,KAAD,CAAOT,KAAM,UAAWC,UAAWC,EAAAA,GAAOC,KAAK,QAAQE,SAAUC,EAAAA,QAGpE9B,EAAMkC,eACL,gBAAKb,UAAWC,EAAhB,UACE,4BAAOtB,EAAMkC,aAAb,UAGJ,gBAAKb,UAAWC,EAAhB,UACE,mBAAQK,KAAK,SAAb,sDAaZ,GAAeQ,EAAAA,EAAAA,KANS,SAAAC,GAAK,MAAK,CAChCC,OAAQD,EAAME,KAAKD,OACnBH,aAAcE,EAAME,KAAKJ,aACzBH,WAAYK,EAAME,KAAKP,cAGe,CACtCjB,MAAAA,EAAAA,IADF,EA5Ec,SAAAd,GACZ,OAAIA,EAAMqC,QACD,SAAC,KAAD,CAAUE,GAAI,cAIrB,4BACE,sDACA,SAACxC,EAAD,CAAWe,MAAOd,EAAMc,MAAOoB,aAAclC,EAAMkC,aAAcH,WAAY/B,EAAM+B,oB,8KCfzF,EAAyB,4BAAzB,EAA6D,2B,+CCChDD,EAAW,SAAAvB,GAAK,OAAKA,OAAQI,EAAY,+FACzC6B,EAAc,SAAAC,GAMzB,OAAoB,IAFlB,wyCACwBC,KAAKD,IACI,MAAPA,OAAc9B,EAAY,iHAE3CT,EAAkB,SAAAD,GAAQ,OAAI,SAAAM,GAAK,OAC9CA,GAASA,EAAMoC,OAAS1C,EAAxB,oHAA2DA,QAAaU,IAC7DP,EAAkB,SAAAD,GAAQ,OAAI,SAAAI,GAAK,OAC9CA,GAASA,EAAMoC,OAASxC,EAAxB,4GAAwDA,QAAaQ,IAEjEiC,EAAY,SAAC,GAA8B,EAA5BC,MAA6B,IAAtBC,EAAqB,EAArBA,KAAS9C,GAAY,YACzC+C,EAAWD,EAAKrC,OAASqC,EAAKE,QACpC,OACE,iBAAK3B,UAAS,UAAKC,EAAL,YAAuByB,EAAWzB,EAAgB,GAAlD,KAAd,UACGtB,EAAMiD,SACNF,IAAY,0BAAOD,EAAKrC,YAKlBiB,EAAQ,SAAA1B,GACnB,IAAQ6C,EAA8B7C,EAA9B6C,MAAgBK,GAAclD,EAAvB8C,MAAf,OAAsC9C,EAAtC,IACA,OACE,SAAC4C,GAAD,kBAAe5C,GAAf,cACE,oCAAWkD,GAAeL","sources":["webpack://01_educational-project/./src/componetns/login/Login.module.css?c68e","componetns/login/Login.jsx","webpack://01_educational-project/./src/componetns/utils/validators/FormControl.module.css?49cd","componetns/utils/validators/FormControl.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Login_form__Ar6mQ\",\"inputWrap\":\"Login_inputWrap__6f96n\",\"errorData\":\"Login_errorData__keQru\"};","import classes from './Login.module.css';\r\nimport React from 'react';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { Input, maxValueCreator, minValueCreator, required } from '../utils/validators/FormControl';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst Login = props => {\r\n  if (props.isAuth) {\r\n    return <Navigate to={'/profile'} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Вход</h1>\r\n      <LoginForm login={props.login} errorMessage={props.errorMessage} captchaUrl={props.captchaUrl} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst LoginForm = props => {\r\n  const onSubmit = data => {\r\n    props.login(data.email, data.password, data.rememberMe, data.captcha);\r\n  };\r\n  const maxValue = maxValueCreator(50);\r\n  const minValue = minValueCreator(10);\r\n  const composeValidators =\r\n    (...validators) =>\r\n    value =>\r\n      validators.reduce((error, validator) => error || validator(value), undefined);\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit }) => (\r\n        <form onSubmit={handleSubmit} className={classes.form} action=''>\r\n          <div className={classes.inputWrap}>\r\n            <Field\r\n              name={'email'}\r\n              component={Input}\r\n              type='text'\r\n              placeholder='Email'\r\n              validate={composeValidators(required, maxValue)}\r\n            />\r\n          </div>\r\n          <div className={classes.inputWrap}>\r\n            <Field\r\n              name={'password'}\r\n              component={Input}\r\n              type='password'\r\n              placeholder='Пароль'\r\n              validate={composeValidators(required, minValue)}\r\n            />\r\n          </div>\r\n          <label className={classes.inputWrap}>\r\n            <Field name={'rememberMe'} component='input' type='checkbox' />\r\n            Замомнить меня\r\n          </label>\r\n          {props.captchaUrl && (\r\n            <>\r\n              <img src={props.captchaUrl} alt='captcha' />\r\n              <Field name={'captcha'} component={Input} type='input' validate={required} />\r\n            </>\r\n          )}\r\n          {props.errorMessage && (\r\n            <div className={classes.errorData}>\r\n              <span>{props.errorMessage} </span>\r\n            </div>\r\n          )}\r\n          <div className={classes.inputWrap}>\r\n            <button type='submit'> Войти</button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  isAuth: state.auth.isAuth,\r\n  errorMessage: state.auth.errorMessage,\r\n  captchaUrl: state.auth.captchaUrl,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  login,\r\n})(Login);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"parent\":\"FormControl_parent__xsHKg\",\"error\":\"FormControl_error__j-W5z\"};","import classes from './FormControl.module.css';\r\n\r\nexport const required = value => (value ? undefined : 'Обязательно поле');\r\nexport const validateURL = URL => {\r\n  // const regExURL = /(^https?:\\/\\/)?[a-z0-9~_\\-\\.]+\\.[a-z]{2,9}(\\/|:|\\?[!-~]*)?$/i;\r\n\r\n  var regExURL =\r\n    /^[A-Za-z][A-Za-z0-9+\\-.]*:(?:\\/\\/(?:(?:[A-Za-z0-9\\-._~!$&'()*+,;=:]|%[0-9A-Fa-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9A-Fa-f]{1,4}:){6}|::(?:[0-9A-Fa-f]{1,4}:){5}|(?:[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){4}|(?:(?:[0-9A-Fa-f]{1,4}:){0,1}[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){3}|(?:(?:[0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){2}|(?:(?:[0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}:|(?:(?:[0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})?::)(?:[0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))|(?:(?:[0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}|(?:(?:[0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})?::)|[Vv][0-9A-Fa-f]+\\.[A-Za-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|(?:[A-Za-z0-9\\-._~!$&'()*+,;=]|%[0-9A-Fa-f]{2})*)(?::[0-9]*)?(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*|\\/(?:(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})+(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*)?|(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})+(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*|)(?:\\?(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9A-Fa-f]{2})*)?(?:\\#(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9A-Fa-f]{2})*)?$/;\r\n  const response = regExURL.test(URL);\r\n  return response === true || URL == null ? undefined : 'Некорректная ссылка';\r\n};\r\nexport const maxValueCreator = maxValue => value =>\r\n  value && value.length > maxValue ? `Не может быть больше ${maxValue}` : undefined;\r\nexport const minValueCreator = minValue => value =>\r\n  value && value.length < minValue ? `Минимальная длина ${minValue}` : undefined;\r\n\r\nconst FieldForm = ({ input, meta, ...props }) => {\r\n  const hasError = meta.error && meta.touched;\r\n  return (\r\n    <div className={`${classes.parent} ${hasError ? classes.error : ''} `}>\r\n      {props.children}\r\n      {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Input = props => {\r\n  const { input, meta, ...restProps } = props;\r\n  return (\r\n    <FieldForm {...props}>\r\n      <input {...restProps} {...input} />\r\n    </FieldForm>\r\n  );\r\n};\r\n\r\nexport const Textarea = props => {\r\n  const { input, meta, ...restProps } = props;\r\n  return (\r\n    <FieldForm {...props}>\r\n      <textarea {...restProps} {...input} />\r\n    </FieldForm>\r\n  );\r\n};\r\n"],"names":["LoginForm","props","maxValue","maxValueCreator","minValue","minValueCreator","composeValidators","validators","value","reduce","error","validator","undefined","onSubmit","data","login","email","password","rememberMe","captcha","render","handleSubmit","className","classes","action","name","component","Input","type","placeholder","validate","required","captchaUrl","src","alt","errorMessage","connect","state","isAuth","auth","to","validateURL","URL","test","length","FieldForm","input","meta","hasError","touched","children","restProps"],"sourceRoot":""}